{"version":3,"sources":["stores/apollo-clent.js","stores/middleWare.js","stores/apollo-cache.js","mvp/styles/mainStyle.js","mvp/styles/common.js","contexts/layoutContext.js","contexts/amplifyContext.js","mvp/dialogs/diaStyles.js","mvp/constants.js","mvp/dialogs/BasicDialog.js","mvp/MainContainer.js","mvp/styles/loginStyles.js","mvp/styles/colors.js","mvp/LoginContainer.js","mvp/tabs/tab-panels.js","stores/hooks.js","stores/soGql.js","mvp/tabs/PostTab.js","mvp/tabs/QuestionTab.js","mvp/WelcomeContainer.js","mvp/FederatedLoginContainer.js","routes.js","App.js","stores/amplify-store.js","index.js"],"names":["httpLink","HttpLink","uri","fetch","customFetch","publicHeaders","Accept","client","authMiddleware","ApolloLink","operation","forward","setContext","headers","privateHeaders","Authorization","global","access_token","isPrivate","header","console","log","ApolloClient","cache","globalCache","link","concat","getClient","LOCAL_ENDPOINT","endPoints","Posts","Questions","options","operationName","JSON","parse","body","newUri","InMemoryCache","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","display","alignItems","justifyContent","padding","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","marginLeft","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","SlotContainer","withStyles","root","backgroundColor","position","top","height","flexDirection","Container","WelcomeSlotContainer","margin","SocialContainer","FormGridInnerContainer","LoginTyTheme","createTheme","typography","h7","fontSize","h6","h5","h4","GridStyles","GridRowStyles","marginTop","GridHeader","LayoutContext","createContext","initialState","input","browser","screens","isLoginScreen","dialogs","helpOpen","infoOpen","emailOpen","ACTIONS","reducer","state","action","type","value","Error","stringify","AuthContext","INITIAL_AUTH_STATE","auth","email","AUTH_ACTIONS","authReducer","useAuth","context","useContext","undefined","BasicDialog","Dialog","helpText","infoText","emailText","BasicDialogTitle","props","children","onClose","other","DialogTitle","sx","m","p","minWidth","IconButton","onClick","right","color","palette","grey","BasicDialogView","layOutState","layOutDispatch","useState","setOpen","title","setTitle","content","setContent","useEffect","k","onCloseHelpDialog","id","DialogContent","dividers","layOutContents","map","x","Typography","variant","gutterBottom","layOutContent","MainContainer","dispatch","navigate","useNavigate","openDrawer","setOpenDrawer","isAuth","setIsAuth","checkAuth","Auth","currentAuthenticatedUser","then","creds","signInUserSession","idToken","payload","catch","err","current","currentSession","ret","IsAuth","onDrawOpen","onDrawerClose","onOpenSideBarDialog","logout","signOut","MainView","useTheme","sBttnCtnVal","Box","CssBaseline","Toolbar","edge","marginRight","ThemeProvider","style","flexGrow","Button","direction","Divider","Tooltip","placement","StyledButton","blue","label","paddingTop","debugCreds","LoginContainer","signUp","IsSignUp","runLogin","a","psswd","signIn","isValid","runSignUp","uname","username","password","user","runSocial","federatedSignIn","social","loginAction","showSignUpAction","signUpAction","showLogInAction","LoginView","emailRef","useRef","psswdRef","Grid","container","item","xs","noWrap","TextField","fullWidth","name","size","inputRef","SignUpView","TabPanel","index","role","hidden","uniqueKey","Math","random","toString","substring","FIND_ALL_POSTS","gql","FIND_ALL_QUESTIONS","PostTabContainer","dataList","setDataList","useQuery","onError","onCompleted","res","posts","loading","error","data","refetch","fetchMore","LayOutContainer","minHeight","GridStyle","border","maxHeight","overflow","PostTabView","rowGap","scrollbarColor","justify","elem","Paper","elevation","Card","CardHeader","avatar","Avatar","src","owner","profileImage","displayName","titleTypographyProps","component","align","CardContent","Link","textDecoration","href","score","Date","creationDate","toUTCString","QuestionTabContainer","questions","QuestionTabView","tags","WelcomeContainer","WelcomeView","setValue","a11yProps","Tabs","borderRadius","onChange","event","newValue","Tab","sm","md","SocialLoginCallbacContainer","Routing","path","element","App","fedAuth","domain","scope","redirectSignIn","redirectSignOut","responseType","mandatorySignIn","region","userPoolId","userPoolWebClientId","providersList","useReducer","Provider","ContextProvidersComponent","Amplify","configure","oauth","reduce","acc","Component","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7e7481f8.chunk.js","sourcesContent":["import { ApolloClient, ApolloLink, InMemoryCache, makeVar,   HttpLink,   concat, } from \"@apollo/client\";\nimport fetch from \"cross-fetch\";\nimport {customFetch} from './middleWare'\nimport {globalCache} from './apollo-cache'\n\nconst baseUrl = `http://localhost`\n// const baseUrl = `http://localhost:8080/query`\nconst httpLink = new HttpLink({ uri: baseUrl, fetch: customFetch });\nconst publicHeaders = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n};\n\nconst getClient = () => { \n    const authMiddleware = new ApolloLink((operation, forward) => {\n\n   // console.log( `operation:${JSON.stringify(operation)}  forward:${JSON.stringify(forward)}`);\n    // add headers\n    operation.setContext(({ headers = {} }) => {\n        const privateHeaders = {\n          Authorization: global.access_token\n            ? `Bearer ${global.access_token}`\n            : \"\",\n        };\n        const { isPrivate, Authorization } = headers;\n \n        //If there is Authorization in header, it has the highest priority and is preferred to use\n        if (Authorization) {\n          return {\n            headers: { ...publicHeaders, ...{ Authorization } },\n          };\n        }\n        const header = isPrivate\n          ? { ...publicHeaders, ...privateHeaders }\n          : publicHeaders;\n        console.log(\"header===============\");\n        console.log(header);\n        return {\n          headers: header,\n        };\n      });\n      return forward(operation);\n     });\n\n     return new ApolloClient({\n        cache: globalCache,\n        link: concat(authMiddleware, httpLink),\n      });\n}\n\nexport const client = getClient();","import fetch from \"cross-fetch\";\n\nconst LOCAL_ENDPOINT = \":3000/query\";\n\n\n// map of gql qureies to ports\nconst endPoints = {\n  Posts: LOCAL_ENDPOINT,\n  Questions: LOCAL_ENDPOINT,\n\n}\n\n\n/**\n * options.body looks like\n   {\"operationName\":\"Users\",\"variables\":{},\"query\":\"query Users {\\n  users {\\n    email\\n    __typename\\n  }\\n}\\n\"} \n */\n\nexport const customFetch = (uri, options) => {\n  const { operationName } = JSON.parse(options.body);\n  let newUri = `${uri}${endPoints[operationName]}`;\n  console.log(\"currentURL========:\" + newUri);\n  return fetch(newUri, options);\n};","import {  InMemoryCache, makeVar } from \"@apollo/client\";\n\nexport const globalCache = new InMemoryCache({  \n})\n","import { styled, useTheme } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport MuiDrawer from '@mui/material/Drawer';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n  });\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n  });\n \nexport const DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n}));\n\nexport const AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n\nexport const Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      ...(open && {\n        ...openedMixin(theme),\n        '& .MuiDrawer-paper': openedMixin(theme),\n      }),\n      ...(!open && {\n        ...closedMixin(theme),\n        '& .MuiDrawer-paper': closedMixin(theme),\n      }),\n    }),\n  );","import { createTheme } from '@mui/material/styles';\nimport { withStyles } from '@mui/styles';\nimport Container from '@mui/material/Container';\n\n  export const SlotContainer = withStyles({\n    root: {\n      backgroundColor: 'transparent',\n      position:'relative',\n      top:`8vh`,\n      width:`90%`,\n      height:`90vh`,\n      display:'flex',\n      flexDirection: `row`,\n      justifyContent:`flex-end`,\n      alignItems:`flex-start`,\n    },\n  \n  })(Container);\n\n  export const WelcomeSlotContainer = withStyles({\n    root: {\n      backgroundColor: 'transparent',\n      position:'relative',\n      top:`6vh`,\n      width:`90%`,\n      height:`90vh`,\n      display:'flex',\n      flexDirection: `row`,\n      justifyContent:`flex-start`,\n      alignItems:`flex-start`,\n      margin: 0,\n    },\n  \n  })(Container);\n\n  export const SocialContainer = withStyles({\n    root: {\n      backgroundColor: 'transparent',\n      top:`8vh`,\n      width:`20%`,\n      height:`90vh`,\n      display:'flex',\n      flexDirection: `column`,\n      justifyContent:`flex-start`,\n      alignItems:`flex-start`,\n\n    },\n  \n  })(Container);\n\n\n  export const FormGridInnerContainer = withStyles({\n    root: {\n      backgroundColor: 'transparent',\n      top:`8vh`,\n      width:`80%`,\n      height:`90vh`,\n      display:'flex',\n      flexDirection: `column`,\n      justifyContent:`flex-start`,\n      alignItems:`flex-start`,\n    },\n  \n  })(Container);\n\nexport const LoginTyTheme = createTheme();\n\nLoginTyTheme.typography.h7 = {\n  fontSize: '0.6rem',\n  '@media (min-width:600px)': {\n    fontSize: '0.8rem',\n  },\n  [LoginTyTheme.breakpoints.up('md')]: {\n    fontSize: '1rem',\n  },\n};\n\nLoginTyTheme.typography.h6 = {\n  fontSize: '0.8rem',\n  '@media (min-width:600px)': {\n    fontSize: '1rem',\n  },\n  [LoginTyTheme.breakpoints.up('md')]: {\n    fontSize: '1.2rem',\n  },\n};\n\nLoginTyTheme.typography.h5 = {\n  fontSize: '1rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.4rem',\n  },\n  [LoginTyTheme.breakpoints.up('md')]: {\n    fontSize: '1.6rem',\n  },\n};\n\nLoginTyTheme.typography.h4 = {\n  fontSize: '1.4rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.6rem',\n  },\n  [LoginTyTheme.breakpoints.up('md')]: {\n    fontSize: '1.8rem',\n  },\n};\n\n\nexport const GridStyles = {\n  width: '80%',\n  margin: '5% 0 0 25%',\n}\n\nexport const GridRowStyles = {\n  marginTop: '2vh',\n\n}\n\nexport const GridHeader = {\n  marginLeft: '1%',\n\n}\n\nexport const DebugStyles = {\n  border: '2px solid black'\n}\n\nexport const DebugStyles1 = {\n  border: '2px solid red'\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { createContext, useReducer } from 'react';\n\nexport const LayoutContext = createContext();\n\nexport const INITIAL_INPUT_STATE = {\n    browser: {\n        width: 0,\n        height: 0,\n    },\n\n    screens: {\n        isLoginScreen: false,\n    },\n\n    dialogs: {\n        helpOpen: false,\n        infoOpen: false,\n        emailOpen: false,\n    }\n\n}\n\nconst initialState = {\n    input: INITIAL_INPUT_STATE,\n}\n\nexport const ACTIONS = {\n\n    LOGIN_SCREEN: `loginScreen`,\n    OPEN_HELP: `openHelp`,\n    OPEN_INFO: `openInfo`,\n    OPEN_EMAIL: `openEmail`,\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ACTIONS.LOGIN_SCREEN: {\n            if (action.value === state.input.screens.isLoginScreen) {\n                return state;\n            }\n            return {\n                ...state,\n                input: {\n                    ...state.input,\n                screens: {\n                    ...state.input.screens,\n                    isLoginScreen: action.value,\n                }\n            }\n            }\n        }\n        case ACTIONS.OPEN_HELP: {\n            if (action.value === state.input.dialogs.helpOpen) {\n                return state;\n            }\n            return {\n                ...state,\n                input: {\n                    ...state.input,\n                dialogs: {\n                    helpOpen: action.value,\n                }\n            }\n            }\n        }\n        case ACTIONS.OPEN_INFO: {\n            if (action.value === state.input.dialogs.infoOpen) {\n                return state;\n            }\n            return {\n                ...state,\n                input: {\n                    ...state.input,\n                dialogs: {\n                    infoOpen: action.value,\n                }\n            }\n            }\n        }\n        case ACTIONS.OPEN_EMAIL: {\n            if (action.value === state.input.dialogs.emailOpen ) {\n                return state;\n            }\n            return {\n                ...state,\n                input: {\n                    ...state.input,\n                dialogs: {\n                    emailOpen: action.value,\n                }\n            }\n            }\n        }\n        default: {\n            throw new Error(`Unexpected action: ${JSON.stringify(action)}`);\n        }\n    }\n}\n\nexport const LayoutContextProvider = props => {\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <LayoutContext.Provider value={[state, dispatch]}>\n            {props.children}\n        </LayoutContext.Provider>\n    );\n}","import React, { createContext, useContext, useEffect, useReducer } from 'react'\nimport { Amplify } from 'aws-amplify'\n\nconst AuthContext = createContext();\n\nconst INITIAL_AUTH_STATE = {\n  auth: false,\n  email: '',\n}\n\nconst AUTH_ACTIONS = {\n  LOGIN: `login`,\n  LOGOUT: `logout`,\n\n}\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN: {\n      const { auth, email } = action.value;\n      return {\n        ...state,\n        auth: auth,\n        email: email,\n      }\n    }\n    case AUTH_ACTIONS.LOGOUT: {\n      const { auth, email } = action.value;\n      return {\n        ...state,\n        auth: auth,\n        email: email,\n      }\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n}\n\nconst AuthProvider = props => {\n  const [state, dispatch] = useReducer(authReducer, INITIAL_AUTH_STATE)\n  const value = { state, dispatch }\n \n  return <AuthContext.Provider value={value}>{props.children}</AuthContext.Provider>\n}\n\nconst useAuth = () => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within a CountProvider')\n  }\n  return context\n}\n\nexport { AUTH_ACTIONS, AuthContext, AuthProvider, useAuth }\n\n","import { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\n\n\nexport const BasicDialog = styled(Dialog)(({ theme }) => ({\n \n    '& .MuDialogContent-root': {\n      padding: theme.spacing(2),\n    },\n    '& .MuDialogActions-root': {\n      padding: theme.spacing(1),\n    },\n  }));","\nexport const helpTitle = `Help`\nexport const helpText  = [`SO Pipe is a basic intro to the following stacks`, \n                            `Backend Golang`, \n                            `FrontEnd Material-UI`,\n                            `souce code <link>`]\n\nexport const infoTitle = `Info`\nexport const infoText = ['educational  source code for constructing graphql applications',\n                                `www.nigelsavage.com`]\n\nexport const emailTitle = `Contact Email`\nexport const emailText = ['please forward all enquiries to', `info@nigelstavage.com` ]\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { BasicDialog } from './diaStyles'\nimport { LayoutContext, ACTIONS } from '../../contexts/layoutContext'\nimport {\n  helpText,\n  helpTitle,\n  infoTitle,\n  infoText,\n  emailTitle,\n  emailText\n} from '../constants'\nimport { FamilyRestroomTwoTone } from '@mui/icons-material';\n\nconst BasicDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2, minWidth: 'md' }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nconst debugDialogStyle = {\n  position: 'absolute', top: '80px', left: '140px',\n  minWidth: '300px',\n  minHeight: '300px',\n  zIndex: 1000,\n  border: '2px solid gold'\n}\n\nexport const BasicDialogView = (props) => {\n  const [layOutState, layOutDispatch] = useContext(LayoutContext);\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    console.log(`BasicDialogView useEffect layOutState helpOpen is ${layOutState.input.dialogs}`)\n\n    for (const k in layOutState.input.dialogs) {\n      if (layOutState.input.dialogs[k]) {\n        setOpen(true)\n        switch (k) {\n          case `helpOpen`:\n            setTitle(helpTitle)\n            setContent(helpText)\n            break;\n          case `infoOpen`:\n            setTitle(infoTitle)\n            setContent(infoText)\n            break;\n          case `emailOpen`:\n            setTitle(emailTitle)\n            setContent(emailText)\n            break;\n        }\n      }\n    }\n\n  }, [layOutState.input.dialogs])\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const layOutContent = () => {\n    const layOutContents = content.map((x) => <Typography variant=\"h6\" gutterBottom> {x}</Typography>)\n    return (\n      <>\n        {layOutContents}\n      </>\n    )\n  }\n\n  const onCloseHelpDialog = () => {\n    console.log(\"BasicDialogView onCloseHelpDialog send dispatch open = false\")\n    setOpen(false)\n    for (const k in layOutState.input.dialogs) { \n      layOutDispatch({\n        type: ACTIONS.OPEN_HELP,\n        value: false,\n      });\n      layOutDispatch({\n        type: ACTIONS.OPEN_INFO,\n        value: false,\n      });\n      layOutDispatch({\n        type: ACTIONS.OPEN_EMAIL,\n        value: false,\n      });\n\n    }\n\n  };\n  return (\n    <>\n      <BasicDialog\n\n        onClose={onCloseHelpDialog}\n        open={open}\n      >\n        <BasicDialogTitle id=\"customized-dialog-title\" onClose={onCloseHelpDialog}>\n          {title}\n        </BasicDialogTitle>\n        <DialogContent dividers>\n          {layOutContent()}\n        </DialogContent>\n      </BasicDialog>\n    </>\n  )\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate, Outlet } from 'react-router-dom';\nimport { Auth } from 'aws-amplify'\nimport clsx from 'clsx';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { useTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material//Button';\nimport Container from '@mui/material/Container';\n\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport InfoIcon from '@mui/icons-material/Info';\nimport ContactMailIcon from '@mui/icons-material/ContactMail';\nimport HelpIcon from '@mui/icons-material/Help';\n\nimport { DrawerHeader, AppBar, Drawer } from './styles/mainStyle'\nimport { LoginTyTheme } from './styles/common';\nimport { LayoutContext, ACTIONS } from '../contexts/layoutContext'\nimport { AUTH_ACTIONS, useAuth } from '../contexts/amplifyContext'\nimport { BasicDialogView } from './dialogs/BasicDialog'\n\nconst isLocalDev = false;\n\nexport const MainContainer = (props) => {\n  const { state, dispatch } = useAuth()\n  const navigate = useNavigate()\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [isAuth, setIsAuth] = useState(false);\n\n  const [layOutState, layOutDispatch] = useContext(LayoutContext);\n\n  useEffect(() => {\n    console.log(`MainContainer useAuth state ${JSON.stringify(state)}`)\n    if (isLocalDev) {\n      setIsAuth(true) // remove dev only\n      navigate('/welcome')// remove dev only\n    }  \n\n    console.log(`MainContainer useEffect state navigate checkAuth `)\n    if(!state.auth) {\n      checkAuth()\n    }\n\n  }, [state, navigate])\n\n  useEffect(() => {\n    if (isLocalDev) { }\n    else {\n      if (state.auth) {\n        setIsAuth(true)\n      } else {\n        setIsAuth(false)\n      }\n    }\n    console.log(`MainContainer useEffect state.auth`)\n\n  }, [state.auth])\n\n  const checkAuth = () => {\n\n    Auth.currentAuthenticatedUser().then((creds) => {\n      //console.log(`SocialLoginCallbacContainer federatedSignIn creds ${JSON.stringify(creds)}`)\n      if (creds) {\n        console.log(`MainContainer checkAuth session request dispatch email ${creds.signInUserSession.idToken.payload.email}`)\n        dispatch({\n            type: AUTH_ACTIONS.LOGIN,\n            value: { auth: true, email: creds.signInUserSession.idToken.payload.email }\n        })\n        setIsAuth(true)\n        navigate('/welcome')\n      }\n    }).catch((err) => {\n      // this is for direct cognito login via ampify\n      console.log(`MainContainer checkAuth session request err ${JSON.stringify(err)}`)\n      let current = Auth.currentSession().then((ret) => {\n        console.log(`MainContainer checkAuth currentSession ${current}`)\n        setIsAuth(true)\n        navigate('/welcome')\n      }).catch((err) => {\n        console.log(`MainContainer checkAuth request err  ${err}`)\n        setIsAuth(false)\n        navigate('/login')\n      })\n\n    })\n  }\n  const drawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const drawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const runSocialLogout = () => {\n    Auth.signOut()\n  }\n\n  const onOpenSideBarDialog = (type) => {\n    console.log(\"MainContainer onOpenSideBarDialog send dispatch open = true\")\n\n    switch (type) {\n      case ACTIONS.OPEN_HELP: {\n        layOutDispatch({\n          type: ACTIONS.OPEN_HELP,\n          value: true,\n        });\n        break;\n      }\n      case ACTIONS.OPEN_INFO: {\n        layOutDispatch({\n          type: ACTIONS.OPEN_INFO,\n          value: true,\n        });\n        break;\n      }\n      case ACTIONS.OPEN_EMAIL: {\n        layOutDispatch({\n          type: ACTIONS.OPEN_EMAIL,\n          value: true,\n        });\n        break;\n      }\n    }\n\n\n\n  }\n\n  return (<MainView\n    IsAuth={isAuth}\n    onDrawOpen={drawerOpen}\n    onDrawerClose={drawerClose}\n    openDrawer={openDrawer}\n    onOpenSideBarDialog={onOpenSideBarDialog}\n    logout={runSocialLogout} />)\n}\n\nconst MainView = (props) => {\n\n  const theme = useTheme();\n  const sxVal = { flexGrow: 1, minWidth: '14vw', }\n  const sBttnCtnVal = { display: 'flex', justifyContent: 'flex-end' }\n\n\n  const renderSocialSignOut = () => {\n    return (\n      props.IsAuth &&\n      <Container style={sBttnCtnVal}  >\n        <Button\n          color=\"inherit\"\n          onClick={() => props.logout()}\n        >\n          <ThemeProvider theme={LoginTyTheme}>\n            <Typography variant=\"h7\" > Logout </Typography>\n          </ThemeProvider>\n        </Button>\n      </Container>\n    )\n  }\n\n\n  // see https://mui.com/components/drawers/  Mini variant drawer\n  return (\n    <>\n      {/* <div id=\"123456\" style={debugDialogStyle}><p>filler debug</p></div> */}\n      <BasicDialogView />\n      <Box sx={{ display: 'flex' }}>\n\n\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\" open={props.openDrawer}\n        >\n          <Toolbar>\n            {props.IsAuth &&\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={props.onDrawOpen}\n                edge=\"start\"\n                sx={{\n                  marginRight: '36px',\n                  ...(props.openDrawer && { display: 'none' }),\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            }\n            <ThemeProvider theme={LoginTyTheme}>\n              <Typography variant=\"h5\" style={sxVal} > SO Pipe </Typography>\n            </ThemeProvider>\n            {props.IsAuth && renderSocialSignOut()}\n          </Toolbar>\n        </AppBar>\n\n        {props.IsAuth &&\n          <Drawer\n            variant=\"permanent\"\n            open={props.openDrawer}\n          >\n            <DrawerHeader>\n              <IconButton onClick={props.onDrawerClose}>\n                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n              </IconButton>\n            </DrawerHeader>\n            <Divider />\n            <Tooltip title=\"Log Out\" placement=\"right-start\">\n              <IconButton\n                onClick={() => props.logout()}><LogoutIcon /></IconButton>\n            </Tooltip>\n            <Tooltip title=\"Help\" placement=\"right-start\">\n              <IconButton\n                onClick={() => props.onOpenSideBarDialog(ACTIONS.OPEN_HELP)}>\n                <HelpIcon /></IconButton>\n            </Tooltip>\n            <Tooltip title=\"Info\" placement=\"right-start\">\n              <IconButton\n                onClick={() => props.onOpenSideBarDialog(ACTIONS.OPEN_INFO)}>\n                <InfoIcon /></IconButton>\n            </Tooltip>\n            <Tooltip title=\"Email\" placement=\"right-start\">\n              <IconButton\n                onClick={() => props.onOpenSideBarDialog(ACTIONS.OPEN_EMAIL)} >\n                <ContactMailIcon /></IconButton>\n            </Tooltip>\n          </Drawer>}\n        <Outlet />\n      </Box>\n    </>\n  )\n}","import { withStyles } from '@mui/styles';\nimport { blue } from \"@mui/material/colors\";\nimport Button from '@mui/material/Button';\n\nimport * as COLORS from './colors'\n\nexport const StyledButton = withStyles({\n  root: {\n    backgroundColor: blue[500],\n    fontSize: '24px',\n    \"&:hover\": {\n      backgroundColor: blue[100],\n    }\n\n  },\n  label: {\n    // color: COLORS.FUNKY_GREEN,\n    paddingTop: '4px',\n    color: 'white',\n    \"&:hover\": {\n      color: `${COLORS.FUNKY_GREEN}`,\n    }\n  }\n\n})(Button);\n\n\n\n","export const DARK_BACKGROUND ='#253d5e';\nexport const FUNKY_GREEN ='#00D100';","import React, { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport {\n    FormGridInnerContainer,\n    SlotContainer,\n    SocialContainer,\n    LoginTyTheme,\n    GridStyles,\n    GridRowStyles,\n    GridHeader\n} from './styles/common';\nimport { StyledButton } from './styles/loginStyles'\nimport { Auth } from 'aws-amplify'\nimport { AUTH_ACTIONS, useAuth } from '../contexts/amplifyContext'\n\n\nconst debugCreds = { email: 'nigel447@gmail.com', password: 'DqVwJVWNe6Q6ekW#' }\n\nexport const LoginContainer = (props) => {\n    const navigate = useNavigate()\n    const { state, dispatch } = useAuth()\n    const [signUp, IsSignUp] = useState(false)\n\n    const runLogin = async (creds) => {\n        console.log(`LoginContainer runLogin ${creds.email}  ${creds.psswd}`)\n        await Auth.signIn(debugCreds.email, debugCreds.password)\n        const current = await Auth.currentSession()\n        current.isValid()\n        console.log(`LoginContainer session isValid ${current.isValid()}`)\n        if (current.isValid()) {\n            dispatch({\n                type: AUTH_ACTIONS.LOGIN,\n                value: { auth: true, email: current.idToken.payload.email }\n            })\n            navigate('/welcome')\n        }\n    }\n\n    const runSignUp = async (creds) => {\n        console.log(`LoginContainer runSignUp ${creds.uname} ${creds.email}  ${creds.psswd}`)\n        try {\n            const { user } = await Auth.signUp({\n                username:creds.email, \n                password:creds.psswd,\n            });\n            console.log(`sign up ok usr: ${ user}`);\n            IsSignUp(false)\n            navigate('/login')\n        } catch (error) {\n            console.log('error signing up:', error);\n        }\n   \n    }\n\n \n    const showSignUp =() => {\n        IsSignUp(true)\n    }\n\n    const showLogIn =() => {\n        IsSignUp(false)\n    }\n\n    const runSocial = async () => {\n        // need to set correct calback in gcp console API and services => credentials\n        Auth.federatedSignIn()\n    }\n\n    return (\n        <>\n            {!signUp && <LoginView social={runSocial} loginAction={runLogin} showSignUpAction = {showSignUp} />}\n            {signUp && <SignUpView signUpAction={runSignUp} showLogInAction = {showLogIn}/>}\n        </>\n    )\n}\n\nconst LoginView = (props) => {\n    const emailRef = useRef();\n    const psswdRef = useRef();\n\n    const renderSocial = () => {\n        return (\n            <StyledButton style={GridRowStyles}\n                variant=\"contained\"\n                onClick={() => props.social()}\n            >\n                <ThemeProvider theme={LoginTyTheme}>\n                    <Typography variant=\"h7\" > Google Login   </Typography>\n                </ThemeProvider>\n            </StyledButton>\n        )\n    }\n\n    const renderFormHeader = () => {\n        return (\n            <Grid item xs={6} style={GridHeader} >\n                <ThemeProvider theme={LoginTyTheme}>\n                    <Typography variant=\"h5\" noWrap> Log In To SO Pipe </Typography>\n                </ThemeProvider>\n            </Grid>\n        )\n    }\n\n    return (\n        <SlotContainer >\n            <SocialContainer>{renderSocial()}</SocialContainer>\n            <FormGridInnerContainer  >    {/*style={DebugStyles}   style={DebugStyles1}   */}\n                <Grid container style={GridStyles} spacing={2} >\n                    <Grid container style={GridRowStyles}  >\n                        {renderFormHeader()}\n                    </Grid>\n                    <Grid container style={GridRowStyles}  >\n                        <Grid item xs={6}>\n                            <TextField fullWidth\n                                label=\"Email\"\n                                name=\"email\"\n                                size=\"medium\"\n                                variant=\"outlined\"\n                                inputRef={emailRef}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container style={GridRowStyles}  >\n                        <Grid item xs={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                name=\"password\"\n                                size=\"medium\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                                inputRef={psswdRef}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container style={GridRowStyles} >\n                        <Grid item xs={2}>\n                            <StyledButton\n                                fullWidth\n                                type=\"submit\"\n                                variant=\"contained\"\n                                onClick={() => props.loginAction({ email: emailRef.current.value, psswd: psswdRef.current.value })}\n                            >\n                                <ThemeProvider theme={LoginTyTheme}>\n                                    <Typography variant=\"h7\" >Login</Typography>\n                                </ThemeProvider>\n\n                            </StyledButton>\n                        </Grid>\n                        <Grid item xs={1}> </Grid>\n                        <Grid item xs={2}>\n                            <StyledButton\n                                fullWidth\n                                type=\"submit\"\n                                variant=\"contained\"\n                                onClick={() => props.showSignUpAction( )}\n                            >\n                                <ThemeProvider theme={LoginTyTheme}>\n                                    <Typography variant=\"h7\" >Sign Up</Typography>\n                                </ThemeProvider>\n                            </StyledButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </FormGridInnerContainer>\n        </SlotContainer >\n    )\n}\n\n\nconst SignUpView = (props) => {\n    const emailRef = useRef();\n    const psswdRef = useRef();\n    const renderSUFormHeader = () => {\n        return (\n            <Grid item xs={6} style={GridHeader} >\n                <ThemeProvider theme={LoginTyTheme}>\n                    <Typography variant=\"h5\" noWrap> Sign Up To SO Pipe </Typography>\n                </ThemeProvider>\n            </Grid>\n        )\n    }\n    return (\n        <SlotContainer >\n            <FormGridInnerContainer  >\n                <Grid container style={GridStyles} spacing={2} >\n                    <Grid container style={GridRowStyles}  >\n                        {renderSUFormHeader()}\n                    </Grid>\n                    <Grid container style={GridRowStyles}  >\n                        <Grid item xs={6}>\n                            <TextField fullWidth\n                                label=\"Email\"\n                                name=\"email\"\n                                size=\"medium\"\n                                variant=\"outlined\"\n                                inputRef={emailRef}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container style={GridRowStyles}  >\n                        <Grid item xs={6}>\n                            <TextField\n                                fullWidth\n                                label=\"Password\"\n                                name=\"password\"\n                                size=\"medium\"\n                                type=\"password\"\n                                variant=\"outlined\"\n                                inputRef={psswdRef}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container style={GridRowStyles} >\n\n                        <Grid item xs={2}>\n                            <StyledButton\n                                fullWidth\n                                type=\"submit\"\n                                variant=\"contained\"\n                                onClick={() => props.signUpAction({ email: emailRef.current.value, psswd: psswdRef.current.value })}\n                            >\n                                <ThemeProvider theme={LoginTyTheme}>\n                                    <Typography variant=\"h7\" >Sign Up</Typography>\n                                </ThemeProvider>\n                            </StyledButton>\n                        </Grid>\n                        <Grid item xs={1}> </Grid>\n                        <Grid item xs={2}>\n                            <StyledButton\n                                fullWidth\n                                type=\"submit\"\n                                variant=\"contained\"\n                                onClick={() => props.showLogInAction( )}\n                            >\n                                <ThemeProvider theme={LoginTyTheme}>\n                                    <Typography variant=\"h7\" >Log In</Typography>\n                                </ThemeProvider>\n                            </StyledButton>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </FormGridInnerContainer>\n        </SlotContainer >\n    )\n}","import {Box} from \"@mui/material\";\n \nexport const  TabPanel =(props) => {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div  \n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            {children}\n          </Box>\n        )}\n      </div>\n    );\n  }"," \n\nexport const uniqueKey = () => {\n \n    return (Math.random() + 1).toString(36).substring(2);\n\n}","import { gql } from \"@apollo/client\";\n\nexport const FIND_ALL_POSTS = gql`\nquery Posts {\n   posts  {\n      id \n      type\n      link\n      score\n      lastEditDate\n      creationDate\n      lastActivityDate\n      owner {\n         id\n         profileImage\n         displayName\n         link\n      }\n   }\n}`\n\nexport const FIND_ALL_QUESTIONS = gql`\nquery Questions  {\n   questions  {\n   id \n    owner {\n      id\n      profileImage\n      displayName\n      link\n    }\n    tags\n    title\n    link\n    score\n    creationDate\n   }\n}`\n\n\nexport const CREATE_USERS = gql`\nmutation CreateUser($input: UserInput!) {\n   createUser(user:$input) {\n   email\n   }\n }`","import React, { useEffect, useState } from 'react';\nimport { useQuery } from \"@apollo/client\";\nimport {\n    Box,\n    Grid,\n    Card,\n    CardContent,\n    Typography,\n    CardHeader,\n    Link,\n    Avatar,\n    Paper,\n    Tabs,\n    Tab\n} from \"@mui/material\";\nimport { uniqueKey } from \"../../stores/hooks\";\nimport { ThemeProvider } from '@mui/material/styles';\nimport { LoginTyTheme } from '../styles/common';\n\nimport {\n    FIND_ALL_POSTS,\n} from \"../../stores/soGql\";\n\nexport const PostTabContainer = (props) => {\n    const [dataList, setDataList] = useState([])\n    const { loading, error, data, refetch, fetchMore } = useQuery(\n        FIND_ALL_POSTS,\n        {\n            context: {\n                headers: {\n                    isPrivate: false,\n                },\n            },\n            onError: (err) => { console.log(`useQuery onError ${err}`) },\n            onCompleted: (res) => {\n                //   console.log(`useQuery onCompleted ${JSON.stringify(res)}`)\n                setDataList(res.posts)\n            },\n        },\n\n    );\n    useEffect(() => {\n        console.log(`PostTabContainer constructor dataList update`)\n    }, [dataList])\n\n    return (\n        <PostTabView data={dataList} />\n    )\n}\nconst LayOutContainer = { position: 'relative', minWidth: \"50vw\", minHeight: \"60vh\", }\nconst debugStyle = { border: '#a3a8d2', maxHeight: '80vh', maxWidth: \"50vw\", overflow: 'auto' }\nconst GridStyle = { border: '#a3a8d2', maxHeight: '80vh', minWidth: \"60vw\", overflow: 'auto', paddingTop: '4px' }\nconst PostTabView = (props) => {\n    return (\n        <Box style={LayOutContainer}>\n            <Grid style={GridStyle}\n                sx={{\n                    rowGap: 0.4,\n                    scrollbarColor: \"#110b6c  #ebf7f7\",\n                    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n                        backgroundColor: \"#f1f1f1\",\n                        width: \"20px\",\n                    },\n                }}\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n            >\n                {props.data.map((elem) => (\n                    <Grid container key={uniqueKey()} >\n                        <Grid item xs={12} key={uniqueKey()}>\n                            <Paper elevation={3} >\n                                <Card>\n                                <CardHeader\n                                        avatar={<Avatar src={elem.owner.profileImage} />}\n                                        title={ elem.owner.displayName }\n                                        titleTypographyProps={{\n                                            variant: \"h6\", component: \"span\", align: \"left\", color:'#bb002f'\n                                        }} />\n                                    <CardContent>\n                                        <Link\n                                            sx={{\n                                                textDecoration: 'none',\n                                                '& :hover': {\n                                                    color: '#ff5983',\n                                                },\n                                            }}\n                                            href={elem.link}>\n                                            <ThemeProvider theme={LoginTyTheme}>\n                                                <Typography variant=\"h6\" gutterBottom>\n                                                    {elem.type}\n                                                </Typography>\n                                            </ThemeProvider>\n                                        </Link>\n                                        <ThemeProvider theme={LoginTyTheme}>\n                                            <Box\n                                              sx={{ color: '#001970' }}\n                                            >\n                                                <Typography variant=\"h7\" gutterBottom>\n                                                    {`score:  `}\n\n                                                </Typography>\n\n                                                <Typography\n                                                  sx={{ color: '#bb002f' }}\n                                                variant=\"h7\" gutterBottom>\n                                                    { elem.score}\n\n                                                </Typography>\n                                            </Box>\n                                            <Box\n                                              sx={{ color: '#001970' }}\n                                            >\n                                            <Typography variant=\"h7\" gutterBottom>\n                                                {`created:  `}\n                                            </Typography>\n                                            <Typography variant=\"h7\" gutterBottom\n                                                  sx={{ color: '#bb002f' }}>\n                                                {`    ${new Date(elem.creationDate).toUTCString()}` }\n                                            </Typography>\n                                            </Box>\n                                        </ThemeProvider>\n                                    </CardContent>\n                                </Card>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                ))}\n            </Grid>\n        </Box>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useQuery } from \"@apollo/client\";\nimport {\n    Box,\n    Grid,\n    Card,\n    CardContent,\n    Typography,\n    CardHeader,\n    Link,\n    Avatar,\n    Paper,\n    Tabs,\n    Tab\n} from \"@mui/material\";\nimport { uniqueKey } from \"../../stores/hooks\";\nimport { ThemeProvider } from '@mui/material/styles';\nimport { LoginTyTheme } from '../styles/common';\n\nimport {\n    FIND_ALL_QUESTIONS,\n} from \"../../stores/soGql\";\n\nexport const QuestionTabContainer = (props) => {\n    const [dataList, setDataList] = useState([])\n    const { loading, error, data, refetch, fetchMore } = useQuery(\n        FIND_ALL_QUESTIONS,\n        {\n            context: {\n                headers: {\n                    isPrivate: false,\n                },\n            },\n            onError: (err) => { console.log(`QuestionTabContainer useQuery onError ${err}`) },\n            onCompleted: (res) => {\n                //   console.log(`useQuery onCompleted ${JSON.stringify(res)}`)\n                setDataList(res.questions)\n            },\n        },\n\n    );\n    useEffect(() => {\n        console.log(`QuestionTabContainer constructor dataList update`)\n    }, [dataList])\n\n    return (\n        <QuestionTabView data={dataList} />\n\n    )\n}\n\nconst LayOutContainer = { position: 'relative', minWidth: \"50vw\", minHeight: \"60vh\", }\nconst debugStyle = { border: '#a3a8d2', maxHeight: '80vh', maxWidth: \"50vw\", overflow: 'auto' }\nconst GridStyle = { border: '#a3a8d2', maxHeight: '80vh', minWidth: \"60vw\", overflow: 'auto', paddingTop: '4px' }\n\nconst QuestionTabView = (props) => {\n    return (\n        <Box style={LayOutContainer}>\n            <Grid style={GridStyle}\n                sx={{\n                    rowGap: 0.4,\n                    scrollbarColor: \"#110b6c  #ebf7f7\",\n                    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n                        backgroundColor: \"#f1f1f1\",\n                        width: \"20px\",\n                    },\n                }}\n                container\n                spacing={2}\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"flex-start\"\n            >\n\n                {props.data.map((elem) => (\n                    <Grid container key={uniqueKey()} >\n                        <Grid item xs={12} key={uniqueKey()}>\n                            <Paper elevation={3} >\n                                <Card>\n                                    <CardHeader\n                                        avatar={<Avatar src={elem.owner.profileImage} />}\n                                        title={ elem.owner.displayName }\n                                        titleTypographyProps={{\n                                            variant: \"h6\", component: \"span\", align: \"left\", color:'#bb002f'\n                                        }} />\n\n                                    <CardContent>\n                                        <Link\n                                            sx={{ \n                                                textDecoration: 'none',\n                                                '& :hover': {\n                                                    color: '#ff5983',\n                                                  },}}\n                                            href={elem.link}>\n                                            <ThemeProvider theme={LoginTyTheme}>\n                                                <Typography\n                                                    sx={{ color: '#8e99f3' }}\n                                                    variant=\"h6\" gutterBottom>\n                                                    {`${elem.title}`}\n                                                </Typography>\n                                            </ThemeProvider>\n                                        </Link>\n                                        <ThemeProvider theme={LoginTyTheme}>\n                                            <Typography\n                                                sx={{ color: '#001970' }}\n                                                variant=\"h7\" gutterBottom>\n                                                {`tags ${elem.tags}`}\n                                            </Typography>\n                                            <Box\n                                              sx={{ color: '#001970' }}\n                                            >\n                                                <Typography variant=\"h7\" gutterBottom>\n                                                    {`score:  `}\n\n                                                </Typography>\n\n                                                <Typography\n                                                  sx={{ color: '#bb002f' }}\n                                                variant=\"h7\" gutterBottom>\n                                                    { elem.score}\n\n                                                </Typography>\n                                            </Box>\n                                            <Box\n                                              sx={{ color: '#001970' }}\n                                            >\n                                            <Typography variant=\"h7\" gutterBottom>\n                                                {`created:  `}\n                                            </Typography>\n                                            <Typography variant=\"h7\" gutterBottom\n                                                  sx={{ color: '#bb002f' }}>\n                                                {`    ${new Date(elem.creationDate).toUTCString()}` }\n                                            </Typography>\n                                            </Box>\n                                        </ThemeProvider>\n                                    </CardContent>\n                                </Card>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                ))}\n            </Grid>\n        </Box>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { WelcomeSlotContainer } from './styles/common';\nimport {\n    Box,\n    Grid,\n    Card,\n    CardContent,\n    Typography,\n    CardHeader,\n    Link,\n    Avatar,\n    Paper,\n    AppBar,\n    Tabs,\n    Tab\n} from \"@mui/material\";\n\nimport { TabPanel } from './tabs/tab-panels'\nimport { PostTabContainer } from './tabs/PostTab'\nimport { QuestionTabContainer } from './tabs/QuestionTab'\n\nexport const WelcomeContainer = (props) => {\n    return (\n        <WelcomeView />\n    )\n}\n\nconst WelcomeView = (props) => {\n    const [value, setValue] = useState(0);\n    const tabStyles = {\n        boxShadow: 'none',\n        backgroundColor: 'white',\n        padding: '2px',\n        position: 'relative',\n    }\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n\n\n    function a11yProps(index) {\n        return {\n            id: `simple-tab-${index}`,\n            'aria-controls': `simple-tabpanel-${index}`,\n        };\n    }\n    const debugStyle = { border: '2px solid red' }\n\n    return (\n        <WelcomeSlotContainer >\n            <Box sx={{ width: '100%', marginTop: '4%' }} >\n                <Tabs\n                    sx={{\n                        width: '100%',\n                        \"& .MuiTabs-indicator\": {\n                            display: \"none\",\n                        },\n\n                        \"& .MuiTab-wrapper\": {\n                            color: `#00D100`,\n                        },\n\n                        \"& .Mui-selected .MuiTab-wrapper\": {\n                            textDecoration: \"underline\",\n                            color: '#e91e63',\n                        },\n\n                        \"&  .MuiTab-wrapper\": {\n                            border: `1px solid #a3a8d2`,\n                            borderRadius: '6px',\n                        },\n\n                        \"&  .MuiTab-wrapper:hover\": {\n                            border: \"1px solid blue\",\n                            backgroundColor: '#1f35e6',\n                            borderRadius: '6px',\n                        },\n                    }}\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"simple tabs example\">\n                    <Tab label=\"Latest Questions\" {...a11yProps(0)} sx={{ \n                        fontSize: {xs:'0.6rem', sm:'1rem', md:'1.41rem'} }} />\n                    <Tab label=\"Latest Posts\" {...a11yProps(1)} sx={{ \n                        fontSize: {xs:'0.6rem', sm:'1rem', md:'1.41rem'} }} />\n                </Tabs>\n                <TabPanel value={value} index={0}>\n                    <QuestionTabContainer />\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <PostTabContainer />\n                </TabPanel>\n            </Box>\n        </WelcomeSlotContainer>\n    )\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Auth } from 'aws-amplify'\nimport { AUTH_ACTIONS, useAuth } from '../contexts/amplifyContext'\n\nexport const SocialLoginCallbacContainer = (props) => {\n    const { state, dispatch } = useAuth()\n    const navigate = useNavigate()\n    useEffect(() => {\n        // first check is a social login\n        Auth.currentAuthenticatedUser().then((creds) => {\n            //console.log(`SocialLoginCallbacContainer federatedSignIn creds ${JSON.stringify(creds)}`)\n            if (creds) {\n                console.log(`SocialLoginCallbacContainer federatedSignIn session request dispatch email ${creds.signInUserSession.idToken.payload.email}`)\n                dispatch({\n                    type: AUTH_ACTIONS.LOGIN,\n                    value: { auth: true, email: creds.signInUserSession.idToken.payload.email }\n                })\n                navigate('/welcome')\n            }\n        }).catch((err) => {\n\n            console.log(`SocialLoginCallbacContainer federatedSignIn session request err ${JSON.stringify(err)}`)\n            let current = Auth.currentSession().then((ret) => {\n                console.log(`SocialLoginCallbacContainer federatedSignIn currentSession ${current}`)\n                navigate('/welcome')\n            }).catch((err) => {\n                console.log(`SocialLoginCallbacContainer currentSession request err  ${err}`)\n                navigate('/login')\n            })\n\n        })\n    }, [])\n\n\n    return (<><h4>checking</h4></>)\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport  {MainContainer}   from \"./mvp/MainContainer\"\nimport  {LoginContainer}   from \"./mvp/LoginContainer\"\nimport  {WelcomeContainer} from \"./mvp/WelcomeContainer\"\nimport  {SocialLoginCallbacContainer} from \"./mvp/FederatedLoginContainer\"\n\nconst Routing = () => {\n \n    return (\n    <Router  >\n        <Routes>\n            <Route path=\"/\" element={<MainContainer />} >\n               <Route path=\"/login\" element={<LoginContainer />} />\n               <Route path=\"/welcome\" element={<WelcomeContainer />} />\n               <Route path=\"/socialCallBk\" element={<SocialLoginCallbacContainer />} /> \n            </Route>\n            \n        </Routes>\n    </Router>\n    )\n}\n \n\nexport default Routing","import React from 'react';\nimport Routing from './routes'\nconst App = () => {\n\n  return (\n    <>\n\n    <Routing />\n    </>\n  )\n}\n\nexport default App;\n","import { Amplify } from 'aws-amplify'\nconst fedAuth = {\n    domain: \"nigelsavage.auth.eu-west-1.amazoncognito.com\",\n    scope: [\"email\", \"profile\", \"openid\"],\n    redirectSignIn: \"http://localhost:3000/socialSignIn\",\n    redirectSignOut: \"http://localhost:3000\",\n    responseType: \"token\"\n  }\n\n  const auth = {\n    mandatorySignIn: true,\n    region: 'eu-west-1',\n    userPoolId: \"eu-west-1_9vfpdtgRr\",\n    userPoolWebClientId: \"7ka889jkncipm2kbm7o8iall26\",\n    domain: \"nigelsavage.auth.eu-west-1.amazoncognito.com\",\n    scope: [\"email\", \"profile\", \"openid\"],\n    redirectSignIn: \"http://localhost:3000/socialSignIn\",\n    redirectSignOut: \"http://localhost:3000\",\n    responseType: \"token\"\n  }\n\n  export const ConfigureAmplifyStore = () => {\n    Amplify.configure({\n        Auth:auth,\n        oauth: fedAuth,\n    })\n    return true\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { LayoutContextProvider } from './contexts/layoutContext'\nimport { AuthProvider } from './contexts/amplifyContext'\nimport { ConfigureAmplifyStore } from './stores/amplify-store'\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./stores/apollo-clent\";\n\nconst providersList = [\n  LayoutContextProvider,\n  AuthProvider,\n];\n\nconst configured = ConfigureAmplifyStore()\n\nconst ContextProvidersComponent = props => providersList.reduce((acc, Component) => (\n  <Component>\n    {acc}\n  </Component>), props.children);\n\nexport default ContextProvidersComponent;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ContextProvidersComponent>\n      <App />\n    </ContextProvidersComponent>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}